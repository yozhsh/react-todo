{"version":3,"sources":["components/NavBar/index.js","components/TodoItem/index.js","components/todoInput.js","components/ItemContainer/index.js","pages/todoPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","bg","variant","Brand","href","TodoItem","props","state","this","name","React","Component","getTodoItems","itemArray","todoItems","items","map","item","className","length","TodoInput","handleChange","bind","addItem","event","text","target","value","onChange","onClick","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","Button","ItemContainer","content","dones","doneItem","deleteItem","itemId","type","id","done","key","style","border","backgroundColor","ButtonGroup","Todo","clickItem","setState","parameter","filteredState","filter","filteredDones","Container","fluid","Row","Col","xs","sm","span","offset","md","xl","as","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kNAceA,MAVf,WACI,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACtB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,gB,mGCUGC,E,kDAXX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAKf,OACA,6BAAMC,KAAKF,MAAMG,U,GAPFC,IAAMC,WCG7B,SAASC,EAAaC,GAClB,IAAMC,EAAYN,KAAKD,MAAMQ,MAAMC,KAAI,SAAAC,GAAI,OAAI,yBAAKC,UAAW,QAAQ,kBAAC,EAAD,CAAUT,KAAMQ,EAAKR,WAC5F,GAAII,EAAUM,OACV,OAAOL,E,IAuCAM,E,kDAlCX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IACDe,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBAHA,E,yDAMNE,GACT,IAAMC,EAAOD,EAAME,OAAOC,MAC1BnB,KAAKF,MAAMsB,SAASH,K,gCAIpBjB,KAAKF,MAAMuB,Y,+BAGMjB,EAAaU,KAAKd,MAEnC,OACQ,kBAACsB,EAAA,EAAD,CAAYZ,UAAU,QAClB,kBAACa,EAAA,EAAD,CACIH,SAAUpB,KAAKa,aACfM,MAAOnB,KAAKF,MAAMqB,MAClBK,YAAY,WACZC,aAAW,WACXC,mBAAiB,iBAErB,kBAACJ,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQP,QAASrB,KAAKe,QAASrB,QAAQ,mBAAvC,a,GA5BAQ,IAAMC,W,QCuCf0B,E,kDA/CX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDgC,QAAU,KACf,EAAKC,MAAQ,KACb,EAAKC,SAAW,EAAKA,SAASlB,KAAd,gBAChB,EAAKmB,WAAa,EAAKA,WAAWnB,KAAhB,gBALH,E,qDAQVoB,GACLlC,KAAKF,MAAMuB,QAAQ,CAACc,KAAM,OAAQC,GAAIF,EAAQG,MAAM,M,iCAE7CH,GACPlC,KAAKF,MAAMuB,QAAQ,CAACc,KAAM,SAAUC,GAAIF,M,+BAGlC,IAAD,OAoBL,OAnBIlC,KAAKF,MAAMiC,QACX/B,KAAK+B,MAAO/B,KAAKF,MAAMiC,MAAMvB,KAAI,SAAA6B,GAAI,OAAI,yBAAKC,IAAKD,EAAKD,GAAI1B,UAAU,wDAAwD6B,MAAO,CAACC,OAAQ,SAAUC,gBAAiB,UACrK,gCAASJ,EAAKpC,MACd,kBAACyC,EAAA,EAAD,CAAajB,aAAW,iBACtB,kBAACG,EAAA,EAAD,CAAQP,QAAS,kBAAM,EAAKY,WAAWI,EAAKD,KAAK1C,QAAQ,UAAzD,gBAINM,KAAKF,MAAMS,MAAMI,OACrBX,KAAK8B,QAAU9B,KAAKF,MAAMS,MAAMC,KAAI,SAAAC,GAAI,OAAI,yBAAK6B,IAAK7B,EAAK2B,GAAI1B,UAAU,wDAAwD6B,MAAO,CAACC,OAAQ,SAAUC,gBAAiB,UACxK,2BAAIhC,EAAKR,MACL,kBAACyC,EAAA,EAAD,CAAajB,aAAW,iBACtB,kBAACG,EAAA,EAAD,CAAQP,QAAS,kBAAM,EAAKW,SAASvB,EAAK2B,KAAK1C,QAAQ,WAAvD,QACA,kBAACkC,EAAA,EAAD,CAAQP,QAAS,kBAAM,EAAKY,WAAWxB,EAAK2B,KAAK1C,QAAQ,UAAzD,eAIVM,KAAK8B,QAAU,uBAAGpB,UAAU,eAAb,gBAGX,yBAAK6B,MAAO,CAACC,OAAQ,WACrB,yBAAK9B,UAAU,MAAM6B,MAAO,CAACE,gBAAiB,cAEzCzC,KAAK8B,QACL9B,KAAK+B,Y,GAzCM7B,IAAMC,WCsDnBwC,E,kDArDX,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToB,MAAO,GACPZ,MAAO,GAGPwB,MAAO,IAEX,EAAKlB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAK8B,UAAY,EAAKA,UAAU9B,KAAf,gBAXF,E,yDAcNG,GACTjB,KAAK6C,SAAS,CAAC1B,MAAOF,M,gCAGhB6B,GACN,GAAuB,SAAnBA,EAAUX,KAAgB,CAC1B,IAAMY,EAAgB/C,KAAKD,MAAMQ,MAAMyC,QAAO,SAAAvC,GAAI,OAAIA,EAAK2B,KAAOU,EAAUV,MAC5EpC,KAAK6C,SAAS,CAACtC,MAAOwC,EAAehB,MAAM,GAAD,mBAAM/B,KAAKD,MAAMgC,OAAjB,YAA2B/B,KAAKD,MAAMQ,MAAMyC,QAAO,SAAAvC,GAAI,OAAIA,EAAK2B,KAAOU,EAAUV,eACxH,GAAuB,WAAnBU,EAAUX,KAAmB,CACpC,IAAMY,EAAgB/C,KAAKD,MAAMQ,MAAMyC,QAAO,SAAAvC,GAAI,OAAIA,EAAK2B,KAAOU,EAAUV,MACtEa,EAAgBjD,KAAKD,MAAMgC,MAAMiB,QAAO,SAAAvC,GAAI,OAAIA,EAAK2B,KAAOU,EAAUV,MAC5EpC,KAAK6C,SAAS,CAACtC,MAAOwC,EAAehB,MAAOkB,O,gCAKhDjD,KAAK6C,SAAS,CACVtC,MAAM,GAAD,mBAAMP,KAAKD,MAAMQ,OAAjB,CAAwB,CAAC6B,KAAMpC,KAAKD,MAAMQ,MAAMI,OAAQV,KAAMD,KAAKD,MAAMoB,SAC9EA,MAAO,O,+BAIX,OACI,kBAAC+B,EAAA,EAAD,CAAWC,OAAK,EAACzC,UAAU,QACnB,kBAAC0C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAAIC,GAAI,CAACF,KAAM,EAAGC,OAAQ,GAAIE,GAAI,CAACH,KAAM,EAAGC,OAAO,GAAIG,GAAG,OACzF,kBAAC,EAAD,CAAWxC,SAAUpB,KAAKa,aAAcM,MAAOnB,KAAKD,MAAMoB,MAAOE,QAASrB,KAAKe,YAGvF,kBAACqC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAAIC,GAAI,CAACF,KAAM,EAAGC,OAAQ,GAAIE,GAAI,CAACH,KAAM,EAAGC,OAAO,GAAIG,GAAG,OACzF,kBAAC,EAAD,CAAerD,MAAOP,KAAKD,MAAMQ,MAAOwB,MAAO/B,KAAKD,MAAMgC,MAAOV,QAASrB,KAAK4C,mB,GA9CxF1C,IAAMC,WCUV0D,MATf,WACI,OACI,yBAAKnD,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCQoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d7818795.chunk.js","sourcesContent":["import React from \"react\"\nimport Navbar from 'react-bootstrap/Navbar'\n\n\nfunction NavBar(){\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                React Todo\n            </Navbar.Brand>\n        </Navbar>\n    );\n}\n\nexport default NavBar;","import React from \"react\"\nimport {Button} from \"react-bootstrap\";\nimport {Container} from \"react-bootstrap\";\nimport {Col, Row} from \"react-bootstrap\";\n\nclass TodoItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n        <div>{this.props.name}</div>\n    );\n    }\n}\n\nexport default TodoItem;","import React from 'react'\nimport {Col, Row} from \"react-bootstrap\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport TodoItem from \"./TodoItem\";\n\nfunction getTodoItems(itemArray){\n    const todoItems = this.state.items.map(item => <div className={'mb-2'}><TodoItem name={item.name}/></div>)\n    if (itemArray.length){\n        return todoItems\n    }\n}\n\nclass TodoInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this)\n        this.addItem = this.addItem.bind(this)\n    }\n\n    handleChange(event){\n        const text = event.target.value\n        this.props.onChange(text)\n    }\n\n    addItem(){\n        this.props.onClick()\n    }\n    render() {\n        const getTodos = getTodoItems.bind(this)\n        // const todos = getTodos(this.state.items)\n        return (\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={this.handleChange}\n                        value={this.props.value}\n                        placeholder=\"Add todo\"\n                        aria-label=\"Add Todo\"\n                        aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                        <Button onClick={this.addItem} variant=\"outline-primary\">Add</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n        )\n    }\n}\n\nexport default TodoInput;","import React from \"react\"\nimport {Col} from \"react-bootstrap\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\n\nclass ItemContainer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.content = null\n        this.dones = null\n        this.doneItem = this.doneItem.bind(this)\n        this.deleteItem = this.deleteItem.bind(this)\n    }\n\n    doneItem(itemId){\n        this.props.onClick({type: 'done', id: itemId, done: true})\n    }\n    deleteItem(itemId){\n        this.props.onClick({type: 'delete', id: itemId})\n    }\n\n    render() {\n        if (this.props.dones){\n            this.dones= this.props.dones.map(done => <div key={done.id} className=\"p-2 d-flex justify-content-between align-items-center\" style={{border: \"groove\", backgroundColor: \"white\"}}>\n                <strike>{done.name}</strike>\n                <ButtonGroup aria-label=\"Basic example\">\n                  <Button onClick={() => this.deleteItem(done.id)} variant=\"danger\">Delete</Button>\n                </ButtonGroup>\n        </div>)\n        }\n        if (this.props.items.length){\n        this.content = this.props.items.map(item => <div key={item.id} className=\"p-2 d-flex justify-content-between align-items-center\" style={{border: \"groove\", backgroundColor: \"white\"}}>\n            <p>{item.name}</p>\n                <ButtonGroup aria-label=\"Basic example\">\n                  <Button onClick={() => this.doneItem(item.id)} variant=\"success\">Done</Button>\n                  <Button onClick={() => this.deleteItem(item.id)} variant=\"danger\">Delete</Button>\n                </ButtonGroup>\n        </div>)\n    } else {\n        this.content = <p className=\"text-center\">Add new item</p>\n    }\n        return (\n            <div style={{border: \"groove\"}}>\n            <div className=\"p-2\" style={{backgroundColor: \"gainsboro\"}}>\n                {/*<div className=\"p-2\" style={{border: \"groove\", backgroundColor: \"white\"}}></div>*/}\n                {this.content}\n                {this.dones}\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default ItemContainer;","import React from \"react\"\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TodoInput from \"../components/todoInput\";\nimport ItemContainer from \"../components/ItemContainer\";\nimport TodoItem from \"../components/TodoItem\";\n\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            items: [\n\n            ],\n            dones: [],\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.addItem = this.addItem.bind(this)\n        this.clickItem = this.clickItem.bind(this)\n    }\n\n    handleChange(text){\n        this.setState({value: text})\n    }\n\n    clickItem(parameter){\n        if (parameter.type === \"done\"){\n            const filteredState = this.state.items.filter(item => item.id !== parameter.id)\n            this.setState({items: filteredState, dones: [...this.state.dones, ...this.state.items.filter(item => item.id === parameter.id)]})\n        } else if (parameter.type === \"delete\") {\n            const filteredState = this.state.items.filter(item => item.id !== parameter.id)\n            const filteredDones = this.state.dones.filter(item => item.id !== parameter.id)\n            this.setState({items: filteredState, dones: filteredDones })\n        }\n    }\n\n    addItem(){\n        this.setState({\n            items: [...this.state.items, {id: ++this.state.items.length, name: this.state.value}],\n            value: ''\n        })\n    }\n    render() {\n        return (\n            <Container fluid className=\"mt-2\">\n                    <Row>\n                        <Col xs={12} sm={{span: 9, offset: 1}} md={{span: 6, offset: 3}} xl={{span: 4, offset:4}} as=\"div\">\n                            <TodoInput onChange={this.handleChange} value={this.state.value} onClick={this.addItem}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} sm={{span: 9, offset: 1}} md={{span: 6, offset: 3}} xl={{span: 4, offset:4}} as=\"div\">\n                            <ItemContainer items={this.state.items} dones={this.state.dones} onClick={this.clickItem}/>\n                        </Col>\n                    </Row>\n            </Container>\n    );\n    }\n}\n\nexport default Todo;","import React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// PAGES\nimport Todo from \"./pages/todoPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavBar/>\n            <Todo/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}